package io.github.pmckeown.dependencytrack.suppressions;

import static io.github.pmckeown.dependencytrack.finding.VulnerabilityBuilder.fixType2Vulnerability;
import static org.apache.commons.lang3.RandomStringUtils.randomNumeric;
import static io.github.pmckeown.dependencytrack.finding.VulnerabilityBuilder.fixType1Vulnerability;

import io.github.pmckeown.dependencytrack.finding.Analysis.State;
import io.github.pmckeown.dependencytrack.suppressions.Analysis.AnalysisJustification;
import io.github.pmckeown.dependencytrack.suppressions.Analysis.AnalysisVendorResponse;

public class VulnerabilitySuppressionBuilder {

    private String source = "NVD";
    private String vulnId = "CVE-2016-" + randomNumeric(4);
    private String analysisDetails = "This is a detail information set in analysis of a vulnerability";
    private State analysisState = State.NOT_SET;
    private AnalysisJustification analysisJustification = AnalysisJustification.NOT_SET;
    private AnalysisVendorResponse analysisResponse = AnalysisVendorResponse.NOT_SET;

    private VulnerabilitySuppressionBuilder() {
        // Use builder factory method
    }

    public static VulnerabilitySuppressionBuilder aVulnerabilitySuppression() {
        return new VulnerabilitySuppressionBuilder();
    }

    public static VulnerabilitySuppressionBuilder fixType1VulnerabilitySuppression() {
        return new VulnerabilitySuppressionBuilder()
            .withSource(fixType1Vulnerability().build().getSource())
            .withVulnId(fixType1Vulnerability().build().getVulnId())
            .withAnalysisDetails("Valid suppression without justification and vendor response")
            .withAnalysisState(State.NOT_AFFECTED)
            .withAnalysisJustification(AnalysisJustification.NOT_SET)
            .withAnalysisResponse(AnalysisVendorResponse.NOT_SET);
    }

    public static VulnerabilitySuppressionBuilder fixType2VulnerabilitySuppression() {
        return new VulnerabilitySuppressionBuilder()
            .withSource(fixType2Vulnerability().build().getSource())
            .withVulnId(fixType2Vulnerability().build().getVulnId())
            .withAnalysisDetails("Invalid suppression")
            .withAnalysisState(State.IN_TRIAGE)
            .withAnalysisJustification(AnalysisJustification.NOT_SET)
            .withAnalysisResponse(AnalysisVendorResponse.NOT_SET);
    }

    public static VulnerabilitySuppressionBuilder aDefaultVulnerabilitySuppression() {
        return new VulnerabilitySuppressionBuilder();
    }

    public VulnerabilitySuppressionBuilder withSource(String source) {
        this.source = source;
        return this;
    }

    public VulnerabilitySuppressionBuilder withVulnId(String vulnId) {
        this.vulnId = vulnId;
        return this;
    }

    public VulnerabilitySuppressionBuilder withAnalysisDetails(String analysisDetails) {
        this.analysisDetails = analysisDetails;
        return this;
    }

    public VulnerabilitySuppressionBuilder withAnalysisState(State analysisState) {
        this.analysisState = analysisState;
        return this;
    }

    public VulnerabilitySuppressionBuilder withAnalysisJustification(AnalysisJustification analysisJustification) {
        this.analysisJustification = analysisJustification;
        return this;
    }

    public VulnerabilitySuppressionBuilder withAnalysisResponse(AnalysisVendorResponse analysisResponse) {
        this.analysisResponse = analysisResponse;
        return this;
    }

    public VulnerabilitySuppression build() {
        return new VulnerabilitySuppression(source, vulnId, analysisDetails, analysisState,
            analysisJustification, analysisResponse);
    }
}
